name: Build_And_Release

on: 
  workflow_dispatch:
    inputs:
      withpypy:
        description: 'True to print to STDOUT'
        required: false
        default: false
        type: boolean
  release:
        types: [created]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    name: Build Sdist
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
            python-version: '3.x'

      - name: Install Dependencies
        run: |
            python -m pip install --upgrade pip
            pip install setuptools wheel twine build

      - name: Build Sdist
        run: |
            python -m build --sdist

      - name: 'Upload Sdist'
        uses: 'actions/upload-artifact@v3'
        with:
            name: packages
            path: dist/*

    #   - name: Publish Sdist
    #     env:
    #         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
    #         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #     run:
    #         twine upload dist/*

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: build_sdist
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macOS-11]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - name: Set up QEMU 
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Build Wheels With Pypy 
        if: ${{ inputs.withpypy }}
        uses: pypa/cibuildwheel@v2.16.2
        env:
          # linux下编译哪些arch
          CIBW_ARCHS_LINUX: x86_64 aarch64
          # mac下编译哪些arch
          CIBW_ARCHS_MACOS: x86_64 arm64
          # windows下编译哪些arch
          CIBW_ARCHS_WINDOWS: AMD64
          # 注意,不在临时虚拟环境中编译
          CIBW_BUILD_FRONTEND: "build; args: --no-isolation"
          # 安装编译用的依赖
          CIBW_BEFORE_BUILD: pip install Cython==3.0.6 chardet==5.2.0

      - name: Build Wheels Without Pypy
        if: ${{ !inputs.withpypy }} 
        uses: pypa/cibuildwheel@v2.16.2
        env:

          # 不为pypy编译
          CIBW_SKIP: pp*
          # linux下编译哪些arch
          CIBW_ARCHS_LINUX: x86_64 aarch64
          # mac下编译哪些arch
          CIBW_ARCHS_MACOS: x86_64 arm64
          # windows下编译哪些arch
          CIBW_ARCHS_WINDOWS: AMD64
          # 注意,不在临时虚拟环境中编译
          CIBW_BUILD_FRONTEND: "build; args: --no-isolation"
          # 安装编译用的依赖
          CIBW_BEFORE_BUILD: pip install Cython==3.0.6 chardet==5.2.0

      - name: 'Upload Wheels'
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ./wheelhouse/*.whl
    
    #   - name: Publish Wheels
    #     env:
    #         TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
    #         TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
    #     run:
    #         twine upload wheelhouse/*.whl